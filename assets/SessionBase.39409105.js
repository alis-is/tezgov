var g=Object.defineProperty;var _=(r,t,e)=>t in r?g(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var p=(r,t,e)=>(_(r,typeof t!="symbol"?t+"":t,e),e);import{A as y,B as m,D as b,G as f,O as o,M as d,H as A,J as C}from"./main.53f46f28.js";import{c as z}from"./taquito-utils.es6.0ac4bd0f.js";import{l as w}from"./taquito-local-forging.es6.4263f730.js";class T extends y{constructor(e){super(m(),b.creating,f.onChain,"Deploy contract...");p(this,"operation");p(this,"op");this.operation=e}async send(){return this.op=await this.operation(),this.update_hash(this.op.opHash),{ophash:this.op.opHash}}async confirmation(){if(!this.op)throw new Error("Operation has to be send first!");const e=await this.op.confirmation(),s=await this.op.contract();return this.description=`Deployed: ${s.address}`,{block:{hash:e.block.hash,level:e.block.header.level}}}}class k{constructor(t){p(this,"session");this.session=t}get Base(){return this.session}get ContractAddress(){return this.session.AdminContract.ContractAddress}async withdraw(t){const e=async()=>await this.session.AdminContract.withdraw(t*d);return new o(e,`Withdraw ${t}TEZ from the contract.`,{amount:t})}async withdraw_to(t,e){const s=async()=>await this.session.AdminContract.withdraw_to(t*d,e);return new o(s,`Withdraw ${t}TEZ from the contract to ${e}.`,{amount:t,to:e})}async get_delegate(){return await this.session.AdminContract.get_delegate()}async delegate(t){const e=async()=>await this.session.AdminContract.delegate(t);return new o(e,`Delegate contract balance to ${t}.`,{baker:t})}async transfer_ownership(t){const e=async()=>await this.session.AdminContract.transfer_ownership(t);return new o(e,`Transfer contract ownership to ${t}.`,{to:t})}async take_ownership(){const t=async()=>await this.session.AdminContract.take_ownership();return new o(t,"Claim contract ownership.")}async get_contract_balance(){return(await this.session.Tezos.rpc.getBalance(this.session.AdminContract.ContractAddress)).toNumber()/d}async deploy_contract(t,e){const s=async()=>await this.session.Tezos.wallet.originate({code:t,init:e}).send();return new T(s)}async update_metadata(t){const e={},c=await(await this.session.Contract.get_contract_storage()).metadata.getMultipleValues(Object.keys(t));for(const n of Object.keys(t)){const l=z(t[n]);c.get(n)!=l&&(e[n]=l)}const i=async()=>await this.session.AdminContract.update_metadata([...Object.keys(e).map(n=>({key:n,value:e[n]}))]);return new o(i,"Update Metadata",{metadata:t})}async update_extension(t){const s=(await this.session.Tezos.contract.at(this.ContractAddress)).parameterSchema.Execute(JSON.parse(t)),a=async()=>await this.session.AdminContract.update_ext(s.update_ext);return new o(a,"Update Extension",{code:t})}async update_extension_storage(t,e,s){const a=async()=>await this.session.AdminContract.update_ext_storage([{key:{0:t,1:e},value:s}]);return new o(a,"Update Extension Storage",{kind:t,key:e,value:s})}}class P{constructor(t,e,s){p(this,"tezos");p(this,"account");this.options=s,this.tezos=e,this.account=t}get IsActive(){return this.options.managerKey!==void 0}get IsGuest(){return!1}get IsAccountSwitchSupported(){return!0}get Account(){return this.account}get NetworkId(){return this.options.networkId}get Tezos(){return this.tezos}async activate(){const t=async()=>await this.Tezos.wallet.transfer({to:this.Account,amount:1,mutez:!0}).send();return new o(t,"Activate Account",{account:this.Account})}async get_balance(){return(await this.tezos.rpc.getBalance(this.account)).toNumber()/d}get_admin_session(){return new k(this)}generate_operation_link(t){switch(this.NetworkId){case"ghostnet":return`https://ghostnet.tzkt.io/${t}`;default:return`https://tzkt.io/${t}`}}async get_total_voting_power({block:t}={block:"head"}){return(await A.get(`${this.Tezos.rpc.getRpcUrl()}/chains/${await this.Tezos.rpc.getChainId()}/blocks/${t}/votes/total_voting_power`)).data}async get_current_period_info(){const t={block:"head~2"},e={period:this.Tezos.rpc.getCurrentPeriod(t),currentQuorum:this.Tezos.rpc.getCurrentQuorum(t),totalVotes:this.get_total_voting_power(t),currentProposal:this.Tezos.rpc.getCurrentProposal(t),ballots:this.Tezos.rpc.getBallots(t),ballotList:this.Tezos.rpc.getBallotList(t),proposals:this.Tezos.rpc.getProposals(t)};await Promise.allSettled(Object.values(e));const s=await e.period,a=await e.currentQuorum/100,c=await e.totalVotes,i=await e.currentProposal,n=await e.ballots,l=await e.ballotList,u=await e.proposals,h={id:s.voting_period.index,kind:s.voting_period.kind,totalVotes:c,startPosition:s.voting_period.start_position,position:s.position,remaining:s.remaining};switch(s.voting_period.kind){case"proposal":return{...h,proposals:u,requiredVotes:c*.05};case"exploration":return{...h,currentProposal:i!=null?i:"",requiredVotes:c*a,ballots:n,ballotList:l};case"promotion":return{...h,currentProposal:i!=null?i:"",requiredVotes:c*a,ballots:n,ballotList:l};case"cooldown":case"adoption":return{...h,requiredVotes:0};case"testing_vote":case"testing":case"promotion_vote":throw new Error("not supported!")}}async get_current_period(){return await this.Tezos.rpc.getCurrentPeriod({block:"head~2"})}async get_current_proposals(){return await this.Tezos.rpc.getProposals({block:"head~2"})}async get_branch(){return await this.Tezos.rpc.getBlockHash({block:"head~2"})}async forge_proposals(t){const e=await this.get_current_period();return{kind:"proposals",source:this.Account,period:e.voting_period.index.toString(),proposals:t}}async forge_proposals_op(t){return w.forge({branch:await this.get_branch(),contents:[await this.forge_proposals(t)]})}async forge_ballot(t){const e=await this.get_current_period();return{kind:"ballot",source:this.Account,period:e.voting_period.index.toString(),proposal:"PtLimaPtLMwfNinJi9rCfDPWea8dFgTZ1MeJ9f1m2SRic6ayiwW",ballot:C[t]}}async forge_ballot_op(t){return w.forge({branch:await this.get_branch(),contents:[await this.forge_ballot(t)]})}async donate(t){let e=this.Tezos.wallet.batch();for(const a of t)e=e.withTransfer(a);const s=async()=>e.send();return new o(s,"Delegate",{account:this.Account,donations:t})}async delegate(t){const e=async()=>await this.Tezos.wallet.setDelegate({delegate:t}).send();return new o(e,"Delegate",{account:this.Account,delegate:t})}}export{P as S};
